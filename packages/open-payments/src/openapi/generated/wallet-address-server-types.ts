/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    /**
     * Retrieve the public information of the Wallet Address.
     *
     * This end-point should be open to anonymous requests as it allows clients to verify a Wallet Address URL and get the basic information required to construct new transactions and discover the grant request URL.
     *
     * The content should be slow changing and cacheable for long periods. Servers SHOULD use cache control headers.
     */
    get: operations["get-wallet-address"];
  };
  "/jwks.json": {
    /** Retrieve the public keys of the Wallet Address. */
    get: operations["get-wallet-address-keys"];
  };
  "/did.json": {
    /** Retrieve the DID Document of the Wallet Address. */
    get: operations["get-wallet-address-did-document"];
  };
}

export interface components {
  schemas: {
    /**
     * Wallet Address
     * @description A **wallet address** resource is the root of the API and contains the public details of the financial account represented by the Wallet Address that is also the service endpoint URL.
     */
    "wallet-address": {
      /**
       * Format: uri
       * @description The URL identifying the wallet address.
       */
      id: string;
      /** @description A public name for the account. This should be set by the account holder with their provider to provide a hint to counterparties as to the identity of the account holder. */
      publicName?: string;
      assetCode: external["schemas.yaml"]["components"]["schemas"]["assetCode"];
      assetScale: external["schemas.yaml"]["components"]["schemas"]["assetScale"];
      /**
       * Format: uri
       * @description The URL of the authorization server endpoint for getting grants and access tokens for this wallet address.
       */
      authServer: string;
      /**
       * Format: uri
       * @description The URL of the resource server endpoint for performing Open Payments with this wallet address.
       */
      resourceServer: string;
    } & { [key: string]: unknown };
    /**
     * JSON Web Key Set document
     * @description A JSON Web Key Set document according to [rfc7517](https://datatracker.ietf.org/doc/html/rfc7517) listing the keys associated with this wallet address. These keys are used to sign requests made by this wallet address.
     */
    "json-web-key-set": {
      keys: components["schemas"]["json-web-key"][];
    };
    /**
     * Ed25519 Public Key
     * @description A JWK representation of an Ed25519 Public Key
     */
    "json-web-key": {
      kid: string;
      /** @description The cryptographic algorithm family used with the key. The only allowed value is `EdDSA`. */
      alg: "EdDSA";
      use?: "sig";
      kty: "OKP";
      crv: "Ed25519";
      /** @description The base64 url-encoded public key. */
      x: string;
    };
    /**
     * DID Document
     * @description A DID Document using JSON encoding
     */
    "did-document": { [key: string]: unknown };
  };
}

export interface operations {
  /**
   * Retrieve the public information of the Wallet Address.
   *
   * This end-point should be open to anonymous requests as it allows clients to verify a Wallet Address URL and get the basic information required to construct new transactions and discover the grant request URL.
   *
   * The content should be slow changing and cacheable for long periods. Servers SHOULD use cache control headers.
   */
  "get-wallet-address": {
    responses: {
      /** Wallet Address Found */
      200: {
        content: {
          "application/json": components["schemas"]["wallet-address"];
        };
      };
      /** Redirect to Wallet Webpage (browser only) */
      302: never;
      /** Wallet Address Not Found */
      404: unknown;
    };
  };
  /** Retrieve the public keys of the Wallet Address. */
  "get-wallet-address-keys": {
    responses: {
      /** JWKS Document Found */
      200: {
        content: {
          "application/json": components["schemas"]["json-web-key-set"];
        };
      };
      /** JWKS Document Not Found */
      404: unknown;
    };
  };
  /** Retrieve the DID Document of the Wallet Address. */
  "get-wallet-address-did-document": {
    responses: {
      /** DID Document Found */
      200: {
        content: {
          "application/json": components["schemas"]["did-document"];
        };
      };
      /** DID Document not yet implemented */
      500: unknown;
    };
  };
}

export interface external {
  "schemas.yaml": {
    paths: {};
    components: {
      schemas: {
        /** amount */
        amount: {
          /**
           * Format: uint64
           * @description The value is an unsigned 64-bit integer amount, represented as a string.
           */
          value: string;
          assetCode: external["schemas.yaml"]["components"]["schemas"]["assetCode"];
          assetScale: external["schemas.yaml"]["components"]["schemas"]["assetScale"];
        };
        /**
         * Asset code
         * @description The assetCode is a code that indicates the underlying asset. This SHOULD be an ISO4217 currency code.
         */
        assetCode: string;
        /**
         * Asset scale
         * @description The scale of amounts denoted in the corresponding asset code.
         */
        assetScale: number;
        /**
         * Receiver
         * Format: uri
         * @description The URL of the incoming payment that is being paid.
         */
        receiver: string;
        /**
         * Wallet Address
         * Format: uri
         * @description URL of a wallet address hosted by a Rafiki instance.
         */
        walletAddress: string;
      };
    };
    operations: {};
  };
}
